package com.ernesto.perez.balancepersonal.daos;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.ernesto.perez.balancepersonal.datos.entidades.ImagenD;
import com.ernesto.perez.balancepersonal.datos.entidades.BancoD;
import com.ernesto.perez.balancepersonal.datos.entidades.OrigenFinancieroD;
import com.ernesto.perez.balancepersonal.datos.entidades.CuentaD;
import com.ernesto.perez.balancepersonal.datos.entidades.CategoriaD;
import com.ernesto.perez.balancepersonal.datos.entidades.AdjuntoD;
import com.ernesto.perez.balancepersonal.datos.entidades.AnulacionMovD;
import com.ernesto.perez.balancepersonal.datos.entidades.MovimientoD;

import com.ernesto.perez.balancepersonal.daos.ImagenDDao;
import com.ernesto.perez.balancepersonal.daos.BancoDDao;
import com.ernesto.perez.balancepersonal.daos.OrigenFinancieroDDao;
import com.ernesto.perez.balancepersonal.daos.CuentaDDao;
import com.ernesto.perez.balancepersonal.daos.CategoriaDDao;
import com.ernesto.perez.balancepersonal.daos.AdjuntoDDao;
import com.ernesto.perez.balancepersonal.daos.AnulacionMovDDao;
import com.ernesto.perez.balancepersonal.daos.MovimientoDDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig imagenDDaoConfig;
    private final DaoConfig bancoDDaoConfig;
    private final DaoConfig origenFinancieroDDaoConfig;
    private final DaoConfig cuentaDDaoConfig;
    private final DaoConfig categoriaDDaoConfig;
    private final DaoConfig adjuntoDDaoConfig;
    private final DaoConfig anulacionMovDDaoConfig;
    private final DaoConfig movimientoDDaoConfig;

    private final ImagenDDao imagenDDao;
    private final BancoDDao bancoDDao;
    private final OrigenFinancieroDDao origenFinancieroDDao;
    private final CuentaDDao cuentaDDao;
    private final CategoriaDDao categoriaDDao;
    private final AdjuntoDDao adjuntoDDao;
    private final AnulacionMovDDao anulacionMovDDao;
    private final MovimientoDDao movimientoDDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        imagenDDaoConfig = daoConfigMap.get(ImagenDDao.class).clone();
        imagenDDaoConfig.initIdentityScope(type);

        bancoDDaoConfig = daoConfigMap.get(BancoDDao.class).clone();
        bancoDDaoConfig.initIdentityScope(type);

        origenFinancieroDDaoConfig = daoConfigMap.get(OrigenFinancieroDDao.class).clone();
        origenFinancieroDDaoConfig.initIdentityScope(type);

        cuentaDDaoConfig = daoConfigMap.get(CuentaDDao.class).clone();
        cuentaDDaoConfig.initIdentityScope(type);

        categoriaDDaoConfig = daoConfigMap.get(CategoriaDDao.class).clone();
        categoriaDDaoConfig.initIdentityScope(type);

        adjuntoDDaoConfig = daoConfigMap.get(AdjuntoDDao.class).clone();
        adjuntoDDaoConfig.initIdentityScope(type);

        anulacionMovDDaoConfig = daoConfigMap.get(AnulacionMovDDao.class).clone();
        anulacionMovDDaoConfig.initIdentityScope(type);

        movimientoDDaoConfig = daoConfigMap.get(MovimientoDDao.class).clone();
        movimientoDDaoConfig.initIdentityScope(type);

        imagenDDao = new ImagenDDao(imagenDDaoConfig, this);
        bancoDDao = new BancoDDao(bancoDDaoConfig, this);
        origenFinancieroDDao = new OrigenFinancieroDDao(origenFinancieroDDaoConfig, this);
        cuentaDDao = new CuentaDDao(cuentaDDaoConfig, this);
        categoriaDDao = new CategoriaDDao(categoriaDDaoConfig, this);
        adjuntoDDao = new AdjuntoDDao(adjuntoDDaoConfig, this);
        anulacionMovDDao = new AnulacionMovDDao(anulacionMovDDaoConfig, this);
        movimientoDDao = new MovimientoDDao(movimientoDDaoConfig, this);

        registerDao(ImagenD.class, imagenDDao);
        registerDao(BancoD.class, bancoDDao);
        registerDao(OrigenFinancieroD.class, origenFinancieroDDao);
        registerDao(CuentaD.class, cuentaDDao);
        registerDao(CategoriaD.class, categoriaDDao);
        registerDao(AdjuntoD.class, adjuntoDDao);
        registerDao(AnulacionMovD.class, anulacionMovDDao);
        registerDao(MovimientoD.class, movimientoDDao);
    }
    
    public void clear() {
        imagenDDaoConfig.getIdentityScope().clear();
        bancoDDaoConfig.getIdentityScope().clear();
        origenFinancieroDDaoConfig.getIdentityScope().clear();
        cuentaDDaoConfig.getIdentityScope().clear();
        categoriaDDaoConfig.getIdentityScope().clear();
        adjuntoDDaoConfig.getIdentityScope().clear();
        anulacionMovDDaoConfig.getIdentityScope().clear();
        movimientoDDaoConfig.getIdentityScope().clear();
    }

    public ImagenDDao getImagenDDao() {
        return imagenDDao;
    }

    public BancoDDao getBancoDDao() {
        return bancoDDao;
    }

    public OrigenFinancieroDDao getOrigenFinancieroDDao() {
        return origenFinancieroDDao;
    }

    public CuentaDDao getCuentaDDao() {
        return cuentaDDao;
    }

    public CategoriaDDao getCategoriaDDao() {
        return categoriaDDao;
    }

    public AdjuntoDDao getAdjuntoDDao() {
        return adjuntoDDao;
    }

    public AnulacionMovDDao getAnulacionMovDDao() {
        return anulacionMovDDao;
    }

    public MovimientoDDao getMovimientoDDao() {
        return movimientoDDao;
    }

}
