package com.ernesto.perez.balancepersonal.daos;

import android.content.Context;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteDatabase.CursorFactory;
import android.database.sqlite.SQLiteOpenHelper;
import android.util.Log;
import de.greenrobot.dao.AbstractDaoMaster;
import de.greenrobot.dao.identityscope.IdentityScopeType;

import com.ernesto.perez.balancepersonal.daos.ImagenDao;
import com.ernesto.perez.balancepersonal.daos.BancoDao;
import com.ernesto.perez.balancepersonal.daos.OrigenFinancieroDao;
import com.ernesto.perez.balancepersonal.daos.CuentaDao;
import com.ernesto.perez.balancepersonal.daos.CategoriaDao;
import com.ernesto.perez.balancepersonal.daos.AdjuntoDao;
import com.ernesto.perez.balancepersonal.daos.AnulacionMovDao;
import com.ernesto.perez.balancepersonal.daos.MovimientoDao;
import com.ernesto.perez.balancepersonal.daos.MovimientoPeriodicoDao;
import com.ernesto.perez.balancepersonal.daos.DetalleMovPeriodicoDao;
import com.ernesto.perez.balancepersonal.daos.ContactoDao;
import com.ernesto.perez.balancepersonal.daos.TelefonoDao;
import com.ernesto.perez.balancepersonal.daos.PrestamoDao;
import com.ernesto.perez.balancepersonal.daos.detallePrestamoDao;
import com.ernesto.perez.balancepersonal.daos.AjusteDao;
import com.ernesto.perez.balancepersonal.daos.detalleAjusteDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * Master of DAO (schema version 1): knows all DAOs.
*/
public class DaoMaster extends AbstractDaoMaster {
    public static final int SCHEMA_VERSION = 1;

    /** Creates underlying database table using DAOs. */
    public static void createAllTables(SQLiteDatabase db, boolean ifNotExists) {
        ImagenDao.createTable(db, ifNotExists);
        BancoDao.createTable(db, ifNotExists);
        OrigenFinancieroDao.createTable(db, ifNotExists);
        CuentaDao.createTable(db, ifNotExists);
        CategoriaDao.createTable(db, ifNotExists);
        AdjuntoDao.createTable(db, ifNotExists);
        AnulacionMovDao.createTable(db, ifNotExists);
        MovimientoDao.createTable(db, ifNotExists);
        MovimientoPeriodicoDao.createTable(db, ifNotExists);
        DetalleMovPeriodicoDao.createTable(db, ifNotExists);
        ContactoDao.createTable(db, ifNotExists);
        TelefonoDao.createTable(db, ifNotExists);
        PrestamoDao.createTable(db, ifNotExists);
        detallePrestamoDao.createTable(db, ifNotExists);
        AjusteDao.createTable(db, ifNotExists);
        detalleAjusteDao.createTable(db, ifNotExists);
    }
    
    /** Drops underlying database table using DAOs. */
    public static void dropAllTables(SQLiteDatabase db, boolean ifExists) {
        ImagenDao.dropTable(db, ifExists);
        BancoDao.dropTable(db, ifExists);
        OrigenFinancieroDao.dropTable(db, ifExists);
        CuentaDao.dropTable(db, ifExists);
        CategoriaDao.dropTable(db, ifExists);
        AdjuntoDao.dropTable(db, ifExists);
        AnulacionMovDao.dropTable(db, ifExists);
        MovimientoDao.dropTable(db, ifExists);
        MovimientoPeriodicoDao.dropTable(db, ifExists);
        DetalleMovPeriodicoDao.dropTable(db, ifExists);
        ContactoDao.dropTable(db, ifExists);
        TelefonoDao.dropTable(db, ifExists);
        PrestamoDao.dropTable(db, ifExists);
        detallePrestamoDao.dropTable(db, ifExists);
        AjusteDao.dropTable(db, ifExists);
        detalleAjusteDao.dropTable(db, ifExists);
    }
    
    public static abstract class OpenHelper extends SQLiteOpenHelper {

        public OpenHelper(Context context, String name, CursorFactory factory) {
            super(context, name, factory, SCHEMA_VERSION);
        }

        @Override
        public void onCreate(SQLiteDatabase db) {
            Log.i("greenDAO", "Creating tables for schema version " + SCHEMA_VERSION);
            createAllTables(db, false);
        }
    }
    
    /** WARNING: Drops all table on Upgrade! Use only during development. */
    public static class DevOpenHelper extends OpenHelper {
        public DevOpenHelper(Context context, String name, CursorFactory factory) {
            super(context, name, factory);
        }

        @Override
        public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
            Log.i("greenDAO", "Upgrading schema from version " + oldVersion + " to " + newVersion + " by dropping all tables");
            dropAllTables(db, true);
            onCreate(db);
        }
    }

    public DaoMaster(SQLiteDatabase db) {
        super(db, SCHEMA_VERSION);
        registerDaoClass(ImagenDao.class);
        registerDaoClass(BancoDao.class);
        registerDaoClass(OrigenFinancieroDao.class);
        registerDaoClass(CuentaDao.class);
        registerDaoClass(CategoriaDao.class);
        registerDaoClass(AdjuntoDao.class);
        registerDaoClass(AnulacionMovDao.class);
        registerDaoClass(MovimientoDao.class);
        registerDaoClass(MovimientoPeriodicoDao.class);
        registerDaoClass(DetalleMovPeriodicoDao.class);
        registerDaoClass(ContactoDao.class);
        registerDaoClass(TelefonoDao.class);
        registerDaoClass(PrestamoDao.class);
        registerDaoClass(detallePrestamoDao.class);
        registerDaoClass(AjusteDao.class);
        registerDaoClass(detalleAjusteDao.class);
    }
    
    public DaoSession newSession() {
        return new DaoSession(db, IdentityScopeType.Session, daoConfigMap);
    }
    
    public DaoSession newSession(IdentityScopeType type) {
        return new DaoSession(db, type, daoConfigMap);
    }
    
}
