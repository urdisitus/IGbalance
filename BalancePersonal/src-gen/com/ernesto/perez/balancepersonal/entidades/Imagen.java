package com.ernesto.perez.balancepersonal.entidades;

import com.ernesto.perez.balancepersonal.daos.DaoSession;
import de.greenrobot.dao.DaoException;

import com.ernesto.perez.balancepersonal.daos.ImagenDao;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here
// KEEP INCLUDES END
/**
 * Entity mapped to table IMAGEN.
 */
public class Imagen {

    private Long id;
    private String direccionFisica;
    private int tipoImagen;
    /** Not-null value. */
    private String nombre;
    /** Not-null value. */
    private java.util.Date fechaModificacion;

    /** Used to resolve relations */
    private transient DaoSession daoSession;

    /** Used for active entity operations. */
    private transient ImagenDao myDao;


    // KEEP FIELDS - put your custom fields here
    // KEEP FIELDS END

    public Imagen() {
    }

    public Imagen(Long id) {
        this.id = id;
    }

    public Imagen(Long id, String direccionFisica, int tipoImagen, String nombre, java.util.Date fechaModificacion) {
        this.id = id;
        this.direccionFisica = direccionFisica;
        this.tipoImagen = tipoImagen;
        this.nombre = nombre;
        this.fechaModificacion = fechaModificacion;
    }

    /** called by internal mechanisms, do not call yourself. */
    public void __setDaoSession(DaoSession daoSession) {
        this.daoSession = daoSession;
        myDao = daoSession != null ? daoSession.getImagenDao() : null;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getDireccionFisica() {
        return direccionFisica;
    }

    public void setDireccionFisica(String direccionFisica) {
        this.direccionFisica = direccionFisica;
    }

    public int getTipoImagen() {
        return tipoImagen;
    }

    public void setTipoImagen(int tipoImagen) {
        this.tipoImagen = tipoImagen;
    }

    /** Not-null value. */
    public String getNombre() {
        return nombre;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    /** Not-null value. */
    public java.util.Date getFechaModificacion() {
        return fechaModificacion;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setFechaModificacion(java.util.Date fechaModificacion) {
        this.fechaModificacion = fechaModificacion;
    }

    /** Convenient call for {@link AbstractDao#delete(Object)}. Entity must attached to an entity context. */
    public void delete() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.delete(this);
    }

    /** Convenient call for {@link AbstractDao#update(Object)}. Entity must attached to an entity context. */
    public void update() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.update(this);
    }

    /** Convenient call for {@link AbstractDao#refresh(Object)}. Entity must attached to an entity context. */
    public void refresh() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.refresh(this);
    }

    // KEEP METHODS - put your custom methods here
    // KEEP METHODS END

}
